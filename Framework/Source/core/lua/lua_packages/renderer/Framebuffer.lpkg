$#include "renderer/DriverSubsystems/Framebuffer.h"

namespace renderer
{
class Texture;
//! Framebuffer abstraction
/*!
 * This class provides API independent abstraction for off-screen frame buffer.
 * This class can be constructed using RenderingAPI driver only.
 */
class Framebuffer
{
public:

	void	setDimensions(unsigned width,unsigned height);
	bool 	bind();
	void	unbind();
	void 	attachRenderBuffer(renderer::FramebufferAttachment::type attach_to,renderer::TextureInternalFormat::type internalFormat);
	void	detachRenderBuffer(renderer::FramebufferAttachment::type detach_from);
	void 	attachTexture(renderer::FramebufferAttachment::type attach_to,const Texture* tex,unsigned level);
	void 	attachTexture(renderer::FramebufferAttachment::type attach_to,const Texture* tex,unsigned side,unsigned level);
	void 	drawBuffers(unsigned size,renderer::FramebufferAttachment::type * bufs);
	void	readBuffer(renderer::FramebufferAttachment::type buf);
	unsigned maxColorAttachments() const;
	unsigned status() const;
};

}

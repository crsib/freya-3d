$#include "core/lua/lua_libraries/wrap_math.h"

namespace math
{
//Vector 3d
float dot( vector3d& _1, vector3d& _2);
//Quaternion
quaternion	createRotationQuat( float angle,  vector3d& axis);
quaternion	quaternionFromMatrix3x3( matrix3x3& mtx);
quaternion	quaternionFromMatrix4x4( matrix4x4& mtx);
//Matrix 3x3
matrix3x3			matrix3x3FromQuaternion( quaternion& q);
matrix3x3  			createXRotationMatrix3x3( float angle);
matrix3x3  			createYRotationMatrix3x3( float angle);
matrix3x3  			createZRotationMatrix3x3( float angle);
matrix3x3			createRotationMatrix3x3( float  angle, vector3d& v3d);
matrix3x3			createScaleMatrix3x3( float sx, float sy,  float sz);
//Matrix 4x4
matrix4x4			matrix4x4FromQuaternion( quaternion& q);
matrix4x4  			createXRotationMatrix4x4( float angle);
matrix4x4  			createYRotationMatrix4x4( float angle);
matrix4x4  			createZRotationMatrix4x4( float angle);
matrix4x4			createRotationMatrix4x4( float  angle, vector3d& v3d);
matrix4x4			createScaleMatrix4x4( float sx, float sy,  float sz);
matrix4x4  			createTranslationMatrix4x4( vector3d& v3d);
matrix4x4   		createOrthoProjectionMatrix4x4(float left,float top,float right,float bottom,float nearPlane,float farPlane);
matrix4x4			createPerspectiveProjectionMatrix4x4(float fovy,float aspect, float nearPlane, float farPlane);
matrix4x4			createFrustumMatrix4x4 (float top,float left,float bootom,float right,float nearPlane,float farPlane);
matrix4x4 			createLookatMatrix4x4( vector3d& from,  vector3d& to,  vector3d& up);
matrix4x4 			createBillboardMatrix4x4( vector3d& from,  vector3d& to,  vector3d& up);
//frustum
bool				pointInFrustum( math::frustum& f,  vector3d& p);
}

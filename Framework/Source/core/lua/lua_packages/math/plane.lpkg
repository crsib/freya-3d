$#include "math/plane.hpp"

namespace math
{
	
class plane
{
enum
	{
		IN_FRONT =  1,
		IN_BACK =  2,
		IN_PLANE = 0
	};
	plane();
	plane(const vector3d& normal,float dist);
	plane(const vector3d& normal,const vector3d& p);
	plane(float nx,float ny,float nz,float dist);
	plane(const vector3d& p1,const vector3d& p2, const vector3d& p3);
	plane(const plane& p);
	~plane();

	int   classify(const vector3d& point);

	float signedDistance(const vector3d& point);
	float distance(vector3d& point);
	void rotate(const vector3d & Dir, float angle);
	void rotate(quaternion & q);
	void move(const vector3d & mv);
	void flip();
	math::vector3d getNormal();

	void setNormal(math::vector3d& Normal);

	float getDistance();

	void setDistance(float Distance);
};
}

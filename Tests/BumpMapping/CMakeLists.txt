#TODO: 
SET ( RESOURCES Textures.7z Shaders/bump.frag Shaders/bump.vert "${SHARED_PLUGINS}" ${APP_STD_DATA}/StdGUI.7z ${APP_STD_DATA}/StdShaders.7z BumpMapping.layout Demo.lua)
IF( APPLE )
	SET_SOURCE_FILES_PROPERTIES( Textures.7z ${APP_STD_DATA}/StdGUI.7z ${APP_STD_DATA}/StdShaders.7z PROPERTIES MACOSX_PACKAGE_LOCATION Resources )
	SET_SOURCE_FILES_PROPERTIES( Shaders/bump.vert Shaders/bump.frag PROPERTIES MACOSX_PACKAGE_LOCATION Resources/Shaders )
	SET_SOURCE_FILES_PROPERTIES( BumpMapping.layout     PROPERTIES MACOSX_PACKAGE_LOCATION Resources/GUI/layouts )
	SET_SOURCE_FILES_PROPERTIES( Demo.lua               PROPERTIES MACOSX_PACKAGE_LOCATION Resources/Scripts )
	SET_SOURCE_FILES_PROPERTIES( ${SHARED_PLUGINS} PROPERTIES GENERATED YES MACOSX_PACKAGE_LOCATION Plugins )
	ADD_EXECUTABLE( BumpMapping MACOSX_BUNDLE main.cpp ${RESOURCES})
	#installation routines
	INSTALL(TARGETS BumpMapping DESTINATION ${CMAKE_INSTALL_PREFIX})
	INSTALL(CODE "INCLUDE ( ${CMAKE_SOURCE_DIR}/CMakeIncludes/CompleteBundle.cmake )\nMakeCompleteBundle( BumpMapping )")
ELSE( APPLE )
#Non apple platforms 
	IF( WIN32 )
		ADD_EXECUTABLE( BumpMapping main.cpp )
		configure_file( Textures.7z "${CMAKE_SOURCE_DIR}/Build/Bin/Textures.7z" COPYONLY )
		configure_file( BumpMapping.layout "${CMAKE_SOURCE_DIR}/Build/Bin/GUI/layouts/BumpMapping.layout" COPYONLY )
		configure_file( Demo.lua "${CMAKE_SOURCE_DIR}/Build/Bin/Scripts/Demo.lua" COPYONLY )
		configure_file( Shaders/bump.frag "${CMAKE_SOURCE_DIR}/Build/Bin/Shaders/bump.frag" COPYONLY )
		configure_file( Shaders/bump.vert "${CMAKE_SOURCE_DIR}/Build/Bin/Shaders/bump.vert" COPYONLY )
		#ADD_CUSTOM_COMMAND( TARGET BumpMapping POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_directory Shaders ${CMAKE_SOURCE_DIR}/Build/Bin/Shaders )
		#ADD_CUSTOM_COMMAND( TARGET BumpMapping POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy Textures.7z "${CMAKE_SOURCE_DIR}/Build/Bin/Textures.7z" VERBATIM)
		#ADD_CUSTOM_COMMAND( TARGET BumpMapping POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy BumpMapping.layout "${CMAKE_SOURCE_DIR}/Build/Bin/GUI/layouts/BumpMapping.layout" VERBATIM)
		#ADD_CUSTOM_COMMAND( TARGET BumpMapping POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy Demo.lua "${CMAKE_SOURCE_DIR}/Build/Bin/Scripts/Demo.lua" VERBATIM)
		INSTALL(TARGETS BumpMapping DESTINATION ${CMAKE_INSTALL_PREFIX}/BumpMapping)
		INSTALL(FILES Textures.7z DESTINATION ${CMAKE_INSTALL_PREFIX}/BumpMapping)
		INSTALL(DIRECTORY Shaders  DESTINATION ${CMAKE_INSTALL_PREFIX}/BumpMapping PATTERN ".svn" EXCLUDE)
		INSTALL(FILES ${SHARED_PLUGINS} DESTINATION ${CMAKE_INSTALL_PREFIX}/BumpMapping/Plugins )
		INSTALL(CODE "INCLUDE ( ${CMAKE_SOURCE_DIR}/CMakeIncludes/CompleteBundle.cmake )\nMakeCompleteBundle( BumpMapping )")
	ELSE( WIN32 )
		ADD_EXECUTABLE( BumpMapping main.cpp )
		INSTALL(TARGETS BumpMapping DESTINATION ${CMAKE_INSTALL_PREFIX}/BumpMapping)
		INSTALL(FILES Textures.7z DESTINATION ${CMAKE_INSTALL_PREFIX}/BumpMapping)
		INSTALL(DIRECTORY Shaders  DESTINATION ${CMAKE_INSTALL_PREFIX}/BumpMapping PATTERN ".svn" EXCLUDE)
		INSTALL(FILES ${SHARED_PLUGINS} DESTINATION ${CMAKE_INSTALL_PREFIX}/BumpMapping/Plugins )
		INSTALL(CODE "INCLUDE ( ${CMAKE_SOURCE_DIR}/CMakeIncludes/CompleteBundle.cmake )\nMakeCompleteBundle( BumpMapping )")
	ENDIF( WIN32 )

ENDIF( APPLE )
TARGET_LINK_LIBRARIES( BumpMapping ${RUNTIME_LINK_LIBRARIES} ${GLOBAL_LINK_LIBRARIES} )

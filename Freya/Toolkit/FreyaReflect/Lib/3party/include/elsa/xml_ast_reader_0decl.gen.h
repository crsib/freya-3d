void registerAttr_TranslationUnit(TranslationUnit *obj, int attr, char const *strValue);
void registerAttr_TF_decl(TF_decl *obj, int attr, char const *strValue);
void registerAttr_TF_func(TF_func *obj, int attr, char const *strValue);
void registerAttr_TF_template(TF_template *obj, int attr, char const *strValue);
void registerAttr_TF_explicitInst(TF_explicitInst *obj, int attr, char const *strValue);
void registerAttr_TF_linkage(TF_linkage *obj, int attr, char const *strValue);
void registerAttr_TF_one_linkage(TF_one_linkage *obj, int attr, char const *strValue);
void registerAttr_TF_asm(TF_asm *obj, int attr, char const *strValue);
void registerAttr_TF_namespaceDefn(TF_namespaceDefn *obj, int attr, char const *strValue);
void registerAttr_TF_namespaceDecl(TF_namespaceDecl *obj, int attr, char const *strValue);
void registerAttr_Function(Function *obj, int attr, char const *strValue);
void registerAttr_MemberInit(MemberInit *obj, int attr, char const *strValue);
void registerAttr_Declaration(Declaration *obj, int attr, char const *strValue);
void registerAttr_ASTTypeId(ASTTypeId *obj, int attr, char const *strValue);
void registerAttr_PQ_qualifier(PQ_qualifier *obj, int attr, char const *strValue);
void registerAttr_PQ_name(PQ_name *obj, int attr, char const *strValue);
void registerAttr_PQ_operator(PQ_operator *obj, int attr, char const *strValue);
void registerAttr_PQ_template(PQ_template *obj, int attr, char const *strValue);
void registerAttr_PQ_variable(PQ_variable *obj, int attr, char const *strValue);
void registerAttr_TS_name(TS_name *obj, int attr, char const *strValue);
void registerAttr_TS_simple(TS_simple *obj, int attr, char const *strValue);
void registerAttr_TS_elaborated(TS_elaborated *obj, int attr, char const *strValue);
void registerAttr_TS_classSpec(TS_classSpec *obj, int attr, char const *strValue);
void registerAttr_TS_enumSpec(TS_enumSpec *obj, int attr, char const *strValue);
void registerAttr_TS_type(TS_type *obj, int attr, char const *strValue);
void registerAttr_TS_typeof(TS_typeof *obj, int attr, char const *strValue);
void registerAttr_BaseClassSpec(BaseClassSpec *obj, int attr, char const *strValue);
void registerAttr_Enumerator(Enumerator *obj, int attr, char const *strValue);
void registerAttr_MemberList(MemberList *obj, int attr, char const *strValue);
void registerAttr_MR_decl(MR_decl *obj, int attr, char const *strValue);
void registerAttr_MR_func(MR_func *obj, int attr, char const *strValue);
void registerAttr_MR_access(MR_access *obj, int attr, char const *strValue);
void registerAttr_MR_usingDecl(MR_usingDecl *obj, int attr, char const *strValue);
void registerAttr_MR_template(MR_template *obj, int attr, char const *strValue);
void registerAttr_Declarator(Declarator *obj, int attr, char const *strValue);
void registerAttr_D_name(D_name *obj, int attr, char const *strValue);
void registerAttr_D_pointer(D_pointer *obj, int attr, char const *strValue);
void registerAttr_D_reference(D_reference *obj, int attr, char const *strValue);
void registerAttr_D_func(D_func *obj, int attr, char const *strValue);
void registerAttr_D_array(D_array *obj, int attr, char const *strValue);
void registerAttr_D_bitfield(D_bitfield *obj, int attr, char const *strValue);
void registerAttr_D_ptrToMember(D_ptrToMember *obj, int attr, char const *strValue);
void registerAttr_D_grouping(D_grouping *obj, int attr, char const *strValue);
void registerAttr_ExceptionSpec(ExceptionSpec *obj, int attr, char const *strValue);
void registerAttr_ON_newDel(ON_newDel *obj, int attr, char const *strValue);
void registerAttr_ON_operator(ON_operator *obj, int attr, char const *strValue);
void registerAttr_ON_conversion(ON_conversion *obj, int attr, char const *strValue);
void registerAttr_S_skip(S_skip *obj, int attr, char const *strValue);
void registerAttr_S_label(S_label *obj, int attr, char const *strValue);
void registerAttr_S_case(S_case *obj, int attr, char const *strValue);
void registerAttr_S_default(S_default *obj, int attr, char const *strValue);
void registerAttr_S_expr(S_expr *obj, int attr, char const *strValue);
void registerAttr_S_compound(S_compound *obj, int attr, char const *strValue);
void registerAttr_S_if(S_if *obj, int attr, char const *strValue);
void registerAttr_S_switch(S_switch *obj, int attr, char const *strValue);
void registerAttr_S_while(S_while *obj, int attr, char const *strValue);
void registerAttr_S_doWhile(S_doWhile *obj, int attr, char const *strValue);
void registerAttr_S_for(S_for *obj, int attr, char const *strValue);
void registerAttr_S_break(S_break *obj, int attr, char const *strValue);
void registerAttr_S_continue(S_continue *obj, int attr, char const *strValue);
void registerAttr_S_return(S_return *obj, int attr, char const *strValue);
void registerAttr_S_goto(S_goto *obj, int attr, char const *strValue);
void registerAttr_S_decl(S_decl *obj, int attr, char const *strValue);
void registerAttr_S_try(S_try *obj, int attr, char const *strValue);
void registerAttr_S_asm(S_asm *obj, int attr, char const *strValue);
void registerAttr_S_namespaceDecl(S_namespaceDecl *obj, int attr, char const *strValue);
void registerAttr_S_function(S_function *obj, int attr, char const *strValue);
void registerAttr_S_rangeCase(S_rangeCase *obj, int attr, char const *strValue);
void registerAttr_S_computedGoto(S_computedGoto *obj, int attr, char const *strValue);
void registerAttr_CN_expr(CN_expr *obj, int attr, char const *strValue);
void registerAttr_CN_decl(CN_decl *obj, int attr, char const *strValue);
void registerAttr_Handler(Handler *obj, int attr, char const *strValue);
void registerAttr_E_boolLit(E_boolLit *obj, int attr, char const *strValue);
void registerAttr_E_intLit(E_intLit *obj, int attr, char const *strValue);
void registerAttr_E_floatLit(E_floatLit *obj, int attr, char const *strValue);
void registerAttr_E_stringLit(E_stringLit *obj, int attr, char const *strValue);
void registerAttr_E_charLit(E_charLit *obj, int attr, char const *strValue);
void registerAttr_E_this(E_this *obj, int attr, char const *strValue);
void registerAttr_E_variable(E_variable *obj, int attr, char const *strValue);
void registerAttr_E_funCall(E_funCall *obj, int attr, char const *strValue);
void registerAttr_E_constructor(E_constructor *obj, int attr, char const *strValue);
void registerAttr_E_fieldAcc(E_fieldAcc *obj, int attr, char const *strValue);
void registerAttr_E_sizeof(E_sizeof *obj, int attr, char const *strValue);
void registerAttr_E_unary(E_unary *obj, int attr, char const *strValue);
void registerAttr_E_effect(E_effect *obj, int attr, char const *strValue);
void registerAttr_E_binary(E_binary *obj, int attr, char const *strValue);
void registerAttr_E_addrOf(E_addrOf *obj, int attr, char const *strValue);
void registerAttr_E_deref(E_deref *obj, int attr, char const *strValue);
void registerAttr_E_cast(E_cast *obj, int attr, char const *strValue);
void registerAttr_E_cond(E_cond *obj, int attr, char const *strValue);
void registerAttr_E_sizeofType(E_sizeofType *obj, int attr, char const *strValue);
void registerAttr_E_assign(E_assign *obj, int attr, char const *strValue);
void registerAttr_E_new(E_new *obj, int attr, char const *strValue);
void registerAttr_E_delete(E_delete *obj, int attr, char const *strValue);
void registerAttr_E_throw(E_throw *obj, int attr, char const *strValue);
void registerAttr_E_keywordCast(E_keywordCast *obj, int attr, char const *strValue);
void registerAttr_E_typeidExpr(E_typeidExpr *obj, int attr, char const *strValue);
void registerAttr_E_typeidType(E_typeidType *obj, int attr, char const *strValue);
void registerAttr_E_grouping(E_grouping *obj, int attr, char const *strValue);
void registerAttr_E_arrow(E_arrow *obj, int attr, char const *strValue);
void registerAttr_E_statement(E_statement *obj, int attr, char const *strValue);
void registerAttr_E_compoundLit(E_compoundLit *obj, int attr, char const *strValue);
void registerAttr_E___builtin_constant_p(E___builtin_constant_p *obj, int attr, char const *strValue);
void registerAttr_E___builtin_va_arg(E___builtin_va_arg *obj, int attr, char const *strValue);
void registerAttr_E_alignofType(E_alignofType *obj, int attr, char const *strValue);
void registerAttr_E_alignofExpr(E_alignofExpr *obj, int attr, char const *strValue);
void registerAttr_E_gnuCond(E_gnuCond *obj, int attr, char const *strValue);
void registerAttr_E_addrOfLabel(E_addrOfLabel *obj, int attr, char const *strValue);
void registerAttr_FullExpression(FullExpression *obj, int attr, char const *strValue);
void registerAttr_ArgExpression(ArgExpression *obj, int attr, char const *strValue);
void registerAttr_ArgExpressionListOpt(ArgExpressionListOpt *obj, int attr, char const *strValue);
void registerAttr_IN_expr(IN_expr *obj, int attr, char const *strValue);
void registerAttr_IN_compound(IN_compound *obj, int attr, char const *strValue);
void registerAttr_IN_ctor(IN_ctor *obj, int attr, char const *strValue);
void registerAttr_IN_designated(IN_designated *obj, int attr, char const *strValue);
void registerAttr_TD_func(TD_func *obj, int attr, char const *strValue);
void registerAttr_TD_decl(TD_decl *obj, int attr, char const *strValue);
void registerAttr_TD_tmember(TD_tmember *obj, int attr, char const *strValue);
void registerAttr_TP_type(TP_type *obj, int attr, char const *strValue);
void registerAttr_TP_nontype(TP_nontype *obj, int attr, char const *strValue);
void registerAttr_TP_template(TP_template *obj, int attr, char const *strValue);
void registerAttr_TA_type(TA_type *obj, int attr, char const *strValue);
void registerAttr_TA_nontype(TA_nontype *obj, int attr, char const *strValue);
void registerAttr_TA_templateUsed(TA_templateUsed *obj, int attr, char const *strValue);
void registerAttr_ND_alias(ND_alias *obj, int attr, char const *strValue);
void registerAttr_ND_usingDecl(ND_usingDecl *obj, int attr, char const *strValue);
void registerAttr_ND_usingDir(ND_usingDir *obj, int attr, char const *strValue);
void registerAttr_FullExpressionAnnot(FullExpressionAnnot *obj, int attr, char const *strValue);
void registerAttr_TS_typeof_expr(TS_typeof_expr *obj, int attr, char const *strValue);
void registerAttr_TS_typeof_type(TS_typeof_type *obj, int attr, char const *strValue);
void registerAttr_FieldDesignator(FieldDesignator *obj, int attr, char const *strValue);
void registerAttr_SubscriptDesignator(SubscriptDesignator *obj, int attr, char const *strValue);
void registerAttr_AttributeSpecifierList(AttributeSpecifierList *obj, int attr, char const *strValue);
void registerAttr_AttributeSpecifier(AttributeSpecifier *obj, int attr, char const *strValue);
void registerAttr_AT_empty(AT_empty *obj, int attr, char const *strValue);
void registerAttr_AT_word(AT_word *obj, int attr, char const *strValue);
void registerAttr_AT_func(AT_func *obj, int attr, char const *strValue);

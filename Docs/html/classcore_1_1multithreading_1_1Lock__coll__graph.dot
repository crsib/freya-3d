digraph G
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{core::multithreading::Lock\n|- m_Mutex\l|+ Lock()\l+ ~Lock()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node2 [label="{EngineSubsystem\n||+ EngineSubsystem()\l+ ~EngineSubsystem()\l+ operator new()\l+ operator delete()\l+ operator new[]()\l+ operator delete[]()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classEngineSubsystem.html",tooltip="This class corrects memory management routines for any engine class except EngineCore..."];
  Node3 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="m_Mutex",arrowtail="open",fontname="FreeSans"];
  Node3 [label="{core::multithreading::Mutex\n||+ id()\l+ lock()\l+ tryLock()\l+ unlock()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classcore_1_1multithreading_1_1Mutex.html",tooltip="This is implementation independent abstraction of mutex concept."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node4 [label="{core::drivermodel::Driver\n||+ id()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classcore_1_1drivermodel_1_1Driver.html",tooltip="This class is a base class for all engine drivers."];
  Node2 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
}

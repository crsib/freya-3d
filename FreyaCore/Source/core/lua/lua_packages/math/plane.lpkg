$#include "math/plane.hpp"

namespace math
{
	
class plane
{
enum
	{
		IN_FRONT =  1,
		IN_BACK =  2,
		IN_PLANE = 0
	};
	plane();
	plane( vector3d& normal,float dist);
	plane( vector3d& normal, vector3d& p);
	plane(float nx,float ny,float nz,float dist);
	plane( vector3d& p1, vector3d& p2,  vector3d& p3);
	plane( plane& p);
	~plane();

	int   classify( vector3d& point) ;

	float signedDistance( vector3d& point) ;
	float distance(vector3d& point);
	void rotate( vector3d & Dir, float angle);
	void rotate(quaternion & q);
	void move( vector3d & mv);
	void flip();
	math::vector3d getNormal();

	void setNormal(math::vector3d& Normal);

	float getDistance();

	void setDistance(float Distance);
};
}
